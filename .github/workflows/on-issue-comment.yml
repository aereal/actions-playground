on:
  issue_comment:
    types: [created]
jobs:
  deploy-to-staging:
    name: deploy to staging
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && startsWith(github.event.comment.body, 'deploy to staging') }}
    environment: staging
    steps:
      - run: echo "Deploy PR#${{ github.event.issue.number }}"
  confirm-diff:
    name: confirm diff
    runs-on: ubuntu-latest
    steps:
      -
        id: determine_pr_ref
        name: determine ref
        run: |
          pr_url=$(jq -r .issue.pull_request.url < ${GITHUB_EVENT_PATH})
          if [[ "$pr_url" == "" ]]; then
            exit 0
          fi
          head_ref="$(curl -sS \
            -H "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            ${pr_url} | \
            jq -r .head.ref)"
          echo "##[set-output name=pr_head_ref;]$head_ref"
      -
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ steps.determine_pr_ref.outputs.pr_head_ref }}
      -
        uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
        with:
          node-version: '12.x'
      -
        run: yarn install --frozen-lockfile
      -
        name: tell user that PR requires check
        run: |
          cat ${GITHUB_EVENT_PATH}
          body="$(jq -r .comment.body < ${GITHUB_EVENT_PATH})"
          if [[ "$body" != "accept diff" ]]; then
            exit 0
          fi

          yarn workspace cdk test -u
          git add -u cdk/test/
          export GIT_COMMITTER_NAME="${GITHUB_ACTOR}"
          export GIT_COMMITTER_EMAIL="${GITHUB_ACTOR}@users.noreply.github.com"
          export GIT_AUTHOR_NAME="${GIT_COMMITTER_NAME}"
          export GIT_AUTHOR_EMAIL="${GIT_COMMITTER_EMAIL}"
          git commit -m 'update snapshot'
          clone_url="$(cat ${GITHUB_EVENT_PATH} | jq -r .repository.clone_url | sed -e 's!//github.com!//${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com!')"
          echo "set origin url = ${clone_url}"
          git remote set-url origin "${clone_url}"
          git push origin ${{ steps.determine_pr_ref.outputs.pr_head_ref }}
