---

name: pull request closed
on:
  pull_request:
    types:
      - closed
jobs:
  delete-unmerged:
    if: '!github.event.pull_request.merged'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: |
          git push --delete origin $_head
        env:
          _head: ${{ github.head_ref }}
  cancel-abandoned-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const variables = {
              owner: context.repo.owner,
              name: context.repo.name,
              prNumber: context.event.number,
            };
            const query = `
              query ($owner: String!, $name: String!, $prNumber: Int!) {
                repository(owner: $owner, name: $name) {
                  pullRequest(number: $prNumber) {
                    headRef {
                      target {
                        ... on Commit {
                          checkSuites(first: 10, filterBy: {appId: 15368}) {
                            nodes {
                              app {
                                databaseId
                                slug
                              }
                              checkRuns(first: 10, filterBy: {checkType: LATEST, status: WAITING}) {
                                nodes {
                                  name
                                  deployment {
                                    environment
                                    databaseId
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            `;
            const result = await github.graphql(query, variables);
            console.log(JSON.stringify(result, null, 2));
